I"µ;<h4 id="baÅŸlangÄ±Ã§">BaÅŸlangÄ±Ã§</h4>
<p>Merhabalar, yeni bir yazÄ± serisine baÅŸlÄ±yorum. Bu seride Spring Boot ve Docker kullanarak uygulamalarÄ±mÄ±zÄ± nasÄ±l geliÅŸtirebileceÄŸimizi anlatacaÄŸÄ±z. Genel hatlarÄ± ile konu sÄ±ralamamÄ±z aÅŸaÄŸÄ±daki ÅŸekilde olacak.</p>

<p>Not:Bu yazÄ± serisini <a href="https://www.udemy.com/share/101ZVgCEUTcllRQw==/">in28Minutes-Docker For Spring Java Developer</a> eÄŸitimindeki derslerden Ã¶ÄŸrendiklerimden oluÅŸturacaÄŸÄ±m.</p>

<ul>
  <li>Dockerâ€™a giriÅŸ</li>
  <li>Spring Boot web uygulamamÄ±zÄ± konteyner iÃ§ine almak.</li>
  <li>MongoDB konteyner oluÅŸturma.</li>
  <li>Uygulama ve veri tabanÄ± konteynÄ±rlarÄ±nÄ± entegre etme.</li>
  <li>Docker Compose ile konteynÄ±rlarÄ±mÄ±zÄ± yÃ¶netme.</li>
</ul>

<h4 id="dockera-giriÅŸ">Dockerâ€™a GiriÅŸ</h4>

<p>Docker 2013 yÄ±lÄ±nda piyasaya sÃ¼rÃ¼len ve iÅŸletim sistemi seviyesinde sanallaÅŸtÄ±rma yapan bir yazÄ±lÄ±mdÄ±r. Docker kurulumu ve komutlarÄ±na geÃ§meden Ã¶nce neden Docker kullandÄ±ÄŸÄ±mÄ±za ve konteynÄ±rlara deÄŸinelim.</p>

<h4 id="konteyner-nedir">Konteyner Nedir</h4>
<p>Dockerâ€™Ä±n resmi sitesindeki tanÄ±mlardan faydalanacak olursak.
YazdÄ±ÄŸÄ±mÄ±z kodlarÄ± paketleyip farklÄ± geliÅŸtirme ortamlarÄ± arasÄ±nda paylaÅŸmak iÃ§in gerekli standart birime <strong>Container</strong> denir. Daha kolay anlaÅŸÄ±lmasÄ± iÃ§in bir case Ã¼zerinden anlatacak olursak. Spring Boot ve MongoDB kullanarak geliÅŸtirdiÄŸimiz web uygulamasÄ±nÄ± test ekibine verdiÄŸimizde sorunsuz Ã§alÄ±ÅŸmasÄ± iÃ§in bizim bilgisayarÄ±mÄ±zdaki environment ile test edecek kiÅŸinin bilgisayarÄ±ndaki environment tÃ¼m Ã¶zellikleri ile aynÄ± olmalÄ±. KullandÄ±ÄŸÄ±mÄ±z JDK â€˜nÄ±n sÃ¼rÃ¼mÃ¼nden MongoDB versiyonuna kadar tÃ¼m environment aynÄ± olmalÄ± ki saÄŸlÄ±k bir ÅŸekilde Ã§alÄ±ÅŸsÄ±n. Ä°ÅŸte developerâ€™leri bu sÄ±kÄ±ntÄ±lÄ± durumdan kurtarmak iÃ§in <strong>Container</strong> Ã§Ã¶zÃ¼mlerine baÅŸvurulur.</p>

<p>Bir Docker <strong>Container Image</strong> kodun saÄŸlÄ±klÄ± bir ÅŸekilde Ã§alÄ±ÅŸmasÄ± iÃ§in gerekli tÃ¼m baÄŸÄ±mlÄ±lÄ±klarÄ± iÃ§erir.</p>

<p>Docker Imageâ€™leri Ã§alÄ±ÅŸma zamanÄ±nda Docker Containerâ€™larÄ±na dÃ¶nÃ¼ÅŸÃ¼r. Hem Linux hem de Windows tabanlÄ± yazÄ±lÄ±mlarda kullanÄ±labilir olan Container yapÄ±sÄ± altyapÄ±dan baÄŸÄ±msÄ±z olarak aynÄ± Ã§alÄ±ÅŸÄ±r. Docker Containerâ€™ lar <strong>Docker Engine</strong> Ã¼zerinde Ã§alÄ±ÅŸÄ±rlar.</p>

<h4 id="sanal-makine-virtual-machine--nedir">Sanal Makine( Virtual Machine ) Nedir</h4>

<p>Docker iÅŸletim sistemi dÃ¼zeyinde sanallaÅŸtÄ±rma saÄŸlar dedik. Bu durumu aÃ§Ä±klamadan Ã¶nce sanallaÅŸtÄ±rmanÄ±n (<strong>Virtualization</strong>) ne olduÄŸuna ve sanal makinelere (<strong>Virtual Machine</strong>) deÄŸinelim.</p>

<p>Sanal makineler (VM) var olan donanÄ±m alt yapÄ±sÄ± Ã¼zerine kurulan yazÄ±lÄ±msal bilgisayarlardÄ±r. Sanal makineler kendine ait ve kurulum esnasÄ±nda tanÄ±mlanan bellek, depolama , iÅŸletim sistemi gibi niteliklere sahiptirler. NasÄ±l ki fiziksel bilgisayarÄ±mÄ±za iÅŸletim sistemi ve uygulama kurabiliyorsak sanal makine Ã¼zerine de kurabiliriz. Ã–rnek verecek olursak Windows bir makine kullanÄ±yoruz ve Linuxâ€™u da deneyimlemek istiyoruz bu durumda ne yapabiliriz; Ya Windowsâ€™un yanÄ±na ikinci bir iÅŸletim sistemi olarak Linux kurarÄ±z ya da Windows iÃ§ine belli Ã¶lÃ§Ã¼de bellek ve depolama alanÄ± vererek bir sanal makine kurup Linux iÅŸletim sistemini yÃ¼kleriz.</p>

<p>Peki neden sanal makinelere ihtiyaÃ§ duyarÄ±z; Sanal makine sistem iÃ§erisinde korunmuÅŸ bir alan oluÅŸturur ve sistemin geri kalanÄ± bu alanda olan hiÃ§bir ÅŸeyden etkilenmez. Ã–rnek verecek olursak virÃ¼s bulaÅŸmÄ±ÅŸ dosyalarÄ± ayÄ±klamak iÃ§in yeni bir sanal makine kurup dosyalarÄ± inceleyebiliriz bu durumda virÃ¼s ana sistemimize ulaÅŸmaz.</p>

<p>AyrÄ±ca sanal makineler server sanallaÅŸtÄ±rmasÄ± iÃ§inde kullanÄ±labilir. Mesela elimizde bir Linux Server var ve biz bu server da Windows iÃ§in geliÅŸtirilen bir yazÄ±lÄ±mÄ± host etmek istiyoruz bu durumda ihtiyacÄ±mÄ±z olan bir sanal makine kurup Windows Ã§alÄ±ÅŸtÄ±rmaktÄ±r.</p>

<h4 id="hypervisor-nedir">Hypervisor Nedir</h4>

<p>Bir iÅŸletim sistemi Ã¼zerinde birden fazla VM Ã§alÄ±ÅŸabilir. Bu durumda ana iÅŸletim sitemine <strong>host</strong> Ã¼zerinde Ã§alÄ±ÅŸan her bir VMâ€™ yede <strong>guest</strong> denir. Host Ã¼zerindeki Guestâ€™lerin yÃ¶netimini saÄŸlayan yazÄ±lÄ±ma <strong>Hypervisor</strong> denir. Hypervisor olarak kullanÄ±lan yazÄ±lÄ±mlara Ã¶rnek verecek olursak;</p>

<ul>
  <li>OracleVM</li>
  <li>VMware</li>
  <li>Microsoft Hyper-V</li>
</ul>

<p>Ã–rnek olarak verilebilir.</p>

<p>Gelelim en can alÄ±cÄ± noktaya VMâ€™ler varsa ve Ã§ok kolaylÄ±k saÄŸlÄ±yorsa Dockerâ€™ a neden ihtiyaÃ§ duyalÄ±m?</p>

<p>Dockerâ€™ Ä±n iÅŸletim sistemi dÃ¼zeyinde bir sanallaÅŸtÄ±rma teknolojisi olduÄŸunu sÃ¶yledik. Bu nasÄ±l oluyor. AÅŸaÄŸÄ±daki gÃ¶rsele bakacak olursak.</p>

<p><img src="/assets/img/posts/docker-vs-vm.png" alt="Image of docker-vs-vm" /></p>

<p>Docker direkt olarak Host iÅŸletim sistemi Ã¼zerinde Ã§alÄ±ÅŸÄ±r. Bu da bellek ve depolama olarak Dockerâ€™Ä± Ã¶n plana Ã§Ä±karmaktadÄ±r. VMâ€™lerin ihtiyacÄ± olan bellek,depolama sistem iÃ§in bÃ¼yÃ¼k bir yÃ¼k oluÅŸtururken Docker ile bu durum minimalize edilmiÅŸtir.</p>

<p>Bu yazÄ±nÄ±n kapsamÄ± Dockerâ€™a giriÅŸ niteliÄŸinde olduÄŸundan Ã§ok fazla detaya girmeden Dockerâ€™Ä± nasÄ±l yÃ¼kleriz ve kullanÄ±rÄ±z buna bakalÄ±m. Dockerâ€™Ä±n detaylarÄ±nÄ± daha geniÅŸ bir yazÄ± dizisine havale ederek Docker kullanÄ±mÄ±na geÃ§elim.</p>

<h4 id="docker-kullanÄ±mÄ±">Docker KullanÄ±mÄ±</h4>

<p>Dockerâ€™Ä±n Ã§ok sade ve kolay bir dÃ¶kÃ¼manÄ± var kurulum adÄ±mlarÄ±nÄ± <a href="https://docs.docker.com/install/">bu dÃ¶kÃ¼mana</a> havale ederek biz Docker kullanÄ±mÄ±na geÃ§iÅŸ yapalÄ±m.</p>

<p>Dockerâ€™Ä± indirip bilgisayarÄ±nÄ±za kurduktan sonra terminalde aÅŸaÄŸÄ±daki komutu yazarak baÅŸarÄ±lÄ± bir ÅŸekilde Ã§alÄ±ÅŸÄ±p Ã§alÄ±ÅŸmadÄ±ÄŸÄ±nÄ± kontrol edebilirsiniz.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>docker -v
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Bu komutu yazÄ±p Enterâ€™e bastÄ±ÄŸÄ±mÄ±zda Dockerâ€™Ä±n versiyon numarasÄ± ve build numarasÄ±nÄ± iÃ§eren bir Ã§Ä±ktÄ± gelmesi lazÄ±m.</p>

<p><img src="/assets/img/posts/docker-v.png" alt="Image of docker-v" /></p>

<p>Dockerâ€™Ä±mÄ±z kurulu artÄ±k Docker ile oynayabiliriz.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>docker ps -a
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Bu komut sistemimizde Ã§alÄ±ÅŸan ya da durmuÅŸ tÃ¼m Containerâ€™larÄ± listeler. AynÄ± iÅŸlevi gerÃ§ekleÅŸtiren bir baÅŸka komutta ÅŸudur;</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>docker container ls -a
</pre></td></tr></tbody></table></code></pre></div></div>
<p>bu iki komutta da gÃ¶rdÃ¼ÄŸÃ¼nÃ¼z Ã¼zere <strong>-a</strong> parametresi kullanÄ±lmÄ±ÅŸtÄ±r, bu Container durdurulmuÅŸ (stop) olsa dahi listelemeye yarar.</p>

<p>Sisteminizde hiÃ§ Container olmadÄ±ÄŸÄ±nÄ± varsayÄ±yorum. Bir Containerâ€™Ä± Ã§alÄ±ÅŸtÄ±rmak iÃ§in ilgili Image dosyasÄ±nÄ± run etmemiz lazÄ±mdÄ±r. Ã–rnek verecek olursak hello-world isimli Containerâ€™Ä± ayaÄŸa kaldÄ±rmak istiyoruz. Dockerâ€™a aÅŸaÄŸÄ±daki komutu verdiÄŸimizde Docker ilk olarak ilgili Image dosyasÄ±nÄ± local sistemimizde arar eÄŸer varsa Imageâ€™i Localâ€™dan yÃ¼kler. EÄŸer local sistemde ilgili Image yoksa Docker ilgili Image dosyasÄ±nÄ± <strong>DockerHub</strong>â€˜dan indirir.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>docker run hello-world
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Bu komutu yazÄ±pEnterâ€™ea bastÄ±ÄŸÄ±mÄ±zda aÅŸaÄŸÄ±daki gibi bir Ã§Ä±ktÄ± oluÅŸur. Ã‡Ä±ktÄ±yÄ± inceleyecek olursak.</p>

<p><img src="/assets/img/posts/docker-run-hello.png" alt="Image of docker-run-hello" /></p>

<p>Ä°lk satÄ±rda Docker hello-world imageâ€™ini local sistemde bulamadÄ±ÄŸÄ±nÄ± sÃ¶ylÃ¼yor. Daha sonra ilgili hello-world Imageâ€™inin <strong>latest</strong> yani son sÃ¼rÃ¼mÃ¼nÃ¼n DockerHub dan Ã§ekildiÄŸini gÃ¶steriyor.</p>

<p>Peki sonuÃ§ olarak ne oldu? Image indirildi ve Ã§alÄ±ÅŸtÄ±rÄ±ldÄ±.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>docker container ls -a
</pre></td></tr></tbody></table></code></pre></div></div>
<p>Komutunu Ã§alÄ±ÅŸtÄ±rÄ±rsak sistemdeki tÃ¼m Containerâ€™larÄ± gÃ¶rÃ¼rÃ¼z. SonuÃ§ olarak Containerâ€™Ä±mÄ±zÄ±n bilgilerini iÃ§eren bir ekran gelir.</p>

<p><img src="/assets/img/posts/docker-container-ls.png" alt="Image of docker-container-ls" /></p>

<p>KullanacaÄŸÄ±mÄ±z diÄŸer Docker komutlarÄ±nÄ± inceleyecek olursak.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker images
---------------
Sistemdeki Docker Image'larÄ±nÄ± listeler.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker pull imageName
---------------
Parametre olarak aldÄ±ÄŸÄ± Image'Ä± Ã§eker.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker image history imageId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Image'in tarihÃ§esini gÃ¶sterir.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker image inspect imageId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Image'in detaylÄ± bilgisini gÃ¶sterir.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker image remove imageId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Image'i sistemden siler.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container pause containerId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Container'Ä± duraklatÄ±r.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container unpause containerId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li duraklatÄ±lmÄ±ÅŸ Container'Ä± tekrar Ã§alÄ±ÅŸtÄ±rÄ±r.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container stop containerId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Container'Ä± durdurur.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container start containerId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Container'Ä± baÅŸlatÄ±r.
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container inspect containerId
---------------
Parametre olarak aldÄ±ÄŸÄ± id li Container'in detaylÄ± bilgisini gÃ¶sterir.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker container prune
---------------
DurdurulmuÅŸ tÃ¼m Container'larÄ± sistemden kaldÄ±rÄ±r.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker events
---------------
TÃ¼m Docker olaylarÄ±nÄ± listeler.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker top containerId
---------------
Ä°lgili Container'Ä±n Ã§alÄ±ÅŸan processeslerini gÃ¶sterir.
</pre></td></tr></tbody></table></code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker stats
---------------
Ã‡alÄ±ÅŸan tÃ¼m Container'larÄ±n kaynak kullanÄ±m istatistiklerini canlÄ± akÄ±ÅŸ olarak gÃ¶sterir.
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Dockerâ€™a giriÅŸ niteliÄŸindeki yazÄ±mÄ±zÄ±n sonuna geldik, bundan sonraki yazÄ±larda Spring Boot uygulamamÄ±zÄ± hazÄ±rlayÄ±p Dockerize edeceÄŸiz.</p>

<h4 id="kaynaklar">Kaynaklar</h4>

<p><a href="https://www.docker.com/resources/what-container">https://www.docker.com/resources/what-container
</a></p>

<p><a href="https://www.vmware.com/topics/glossary/content/virtual-machine">https://www.vmware.com/topics/glossary/content/virtual-machine
</a></p>

<p><a href="https://phoenixnap.com/kb/what-is-hypervisor-type-1-2">https://phoenixnap.com/kb/what-is-hypervisor-type-1-2
</a></p>

<p><a href="https://docs.docker.com/install/">https://docs.docker.com/install/</a></p>

<p><a href="https://docs.docker.com/">https://docs.docker.com/</a></p>
:ET