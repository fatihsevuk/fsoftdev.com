I"»<h2 id="giriÅŸ---java-ortamÄ±">GiriÅŸ - Java OrtamÄ±</h2>

<p>Java dilinde geliÅŸtirme yapmak iÃ§in gerekli olan ortama <strong>JDK (Java Development Kit)</strong> denir.JDK java kodu yazÄ±p Ã§alÄ±ÅŸtÄ±rmamÄ±z iÃ§in gerekli yapÄ±larÄ± iÃ§ierir, bu yapÄ±lardan bahsedecek olursak; yazdÄ±ÄŸÄ±mÄ±z kodlarÄ± <strong>.java</strong> uzantÄ±sÄ± ile kaydederiz ve JDK iÃ§erisinde gelen <strong>java derleyicisini(java compiler) (javac)</strong> kullanarak bu .java dosyalarÄ±nÄ± <strong>.class</strong> uzantÄ±lÄ± <strong>bytecode</strong> formatÄ±na Ã§eviririz.JDK iÃ§eriside gelen bir diÄŸer yapÄ±da derlenen java dosyalarÄ±nÄ± Ã§alÄ±ÅŸtÄ±rmamÄ±za yarayan <strong>launcher</strong> <strong>java</strong> yapÄ±sÄ±dÄ±r.ProgramlarÄ±mÄ±zÄ± komut satÄ±rÄ± yardÄ±mÄ± ile derleyip Ã§alÄ±ÅŸtÄ±rmak iÃ§in <strong>javac</strong> ve <strong>java</strong> yapÄ±larÄ±nÄ± kullanacaÄŸÄ±z.JDK ile gelen diÄŸer iki yapÄ±da <strong>jar</strong> ve <strong>javadoc</strong> yapÄ±larÄ±dÄ±r.<strong>jar</strong> komutu java dosyalarÄ±nÄ± paketlemek iÃ§in , <strong>javadoc</strong> komutu ise dÃ¶kÃ¼mantasyon oluÅŸturmak iÃ§in kullanÄ±lÄ±r.</p>

<p><strong>javac</strong> komutu bytecode diye adlandÄ±rÄ±lan <strong>.class</strong> dosyalarÄ±nÄ± Ã¼retir, .class dosyalarÄ± <strong>java</strong> komutu ile Ã§aliÅŸtÄ±rÄ±lÄ±rlar.<strong>java</strong> komutu kodu Ã§alÄ±ÅŸtÄ±rmadan Ã¶nce <strong>Java sanal makinesiâ€™ ni (JVM - Java Virtual Machine )</strong> baÅŸlatÄ±r.JVM .class dosyalrÄ±nÄ±n gerÃ§ek makinede nasÄ±l Ã§alÄ±ÅŸacaÄŸÄ±nÄ± bilen yapÄ±dÄ±r.</p>

<p>Java 11 den Ã¶nce <strong>JRE(Java Runtime Environment)</strong> JDKâ€™nÄ±n bir alt kÃ¼mesi olarak geliyordu yani JDKâ€™yÄ± indirdiÄŸimizde klasÃ¶r iÃ§inde jre adÄ±nda bir klasÃ¶r ile geliyordu.JRE Java programlarÄ±nÄ± Ã§alÄ±ÅŸtÄ±rmamÄ±zÄ± saÄŸlayan fakat kod derleme yapmayan bir yapÄ±dÄ±r.GÃ¼nlÃ¼k hayatta kullandÄ±ÄŸÄ±mÄ±z ve java ile yazÄ±lan tÃ¼m programlarÄ± kurmak iÃ§in Ã¶n ÅŸart olarak Javaâ€™yÄ± indirmemiz sÃ¶ylenir burada Java diye bahsedilen aslÄ±nda JREâ€™ dir.</p>

<p>Program yazarken algoritmalarÄ±mÄ±zÄ± gerÃ§eklemek iÃ§in gerekli olan yapÄ±larÄ± Ã§oÄŸunlukla kendimiz yazmayÄ±z; Ã¶rnek vermek gerekirse iki metnin eÅŸit olup olmadÄ±ÄŸÄ±nÄ± karÅŸÄ±laÅŸtÄ±rmak iÃ§in gerekli olan kodlarÄ± Ã§oÄŸu zaman kendimiz yazmayÄ±z daha Ã§ok programlama dilinin sunduÄŸu yapÄ±larÄ± kullanÄ±rÄ±z iÅŸte bu yapÄ±larÄ±n tamamÄ±na <strong>application programming interfaces (APIs)</strong> denir.Java Ã§ok geniÅŸ bir APIâ€™ ye sahiptir.</p>

<p>Java programlarÄ± geliÅŸtirmek iÃ§in bir Ã§ok seÃ§eneÄŸimiz vardÄ±r.Sistemimizde JDK kurulu olduktan sonra <strong>terminal</strong> baÅŸta olmak Ã¼zere <strong>notpad</strong>,<strong>vim</strong>,<strong>emacs</strong> gibi text editÃ¶rleri yada <strong>Eclipse</strong>,<strong>NetBeans</strong>,<strong>Intellij</strong> gibi daha geliÅŸmiÅŸ <strong>IDEâ€™ ler ( Integrated Development Environment )</strong> kullanÄ±labilir.</p>

<p>BilgisayarÄ±mÄ±zda JDKâ€™ nÄ±n kurulu olup olmadÄ±ÄŸÄ±nÄ± terminal ekranÄ±na aÅŸaÄŸÄ±daki kodlarÄ± yazarak kontrol edebiliriz.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    java --version
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong><em>OUTPUT</em></strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>    openjdk 11.0.5 2019-10-15
    OpenJDK Runtime Environment (build 11.0.5+10-post-Ubuntu-0ubuntu1.118.04)
    OpenJDK 64-Bit Server VM (build 11.0.5+10-post-Ubuntu-0ubuntu1.118.04, mixed mode, sharing)
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    javac --version
</pre></td></tr></tbody></table></code></pre></div></div>

<p><strong><em>OUTPUT</em></strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre>    javac 11.0.5
</pre></td></tr></tbody></table></code></pre></div></div>

<p>EÄŸer bu komutlarÄ± Ã§alÄ±ÅŸtÄ±rdÄ±ktan sonra yukarÄ±daki gibi Ã§Ä±ktÄ±lar gelmiyorsa sisteminizde java kurulu deÄŸildir.Java kurmak iÃ§in Oracleâ€™Ä±n sitesindeki yÃ¶nergelerden faydalanÄ±labilir.</p>

<h2 id="java-nÄ±n-avantajlarÄ±">Javaâ€™ nÄ±n AvantajlarÄ±</h2>

<h3 id="object-oriented---nesneye-yÃ¶nelik">Object Oriented - Nesneye YÃ¶nelik</h3>
<p>Java <em>nesneye yÃ¶nelimli(<strong>object oriented</strong>)</em> bir dildir.Yani tÃ¼m java kodlarÄ± sÄ±nÄ±flar iÃ§erisinde tanÄ±mlanÄ±r ve bu sÄ±nÄ±flarÄ±n Ã§oÄŸunluÄŸu nesnelere Ã¶rneklendirilir.Javaâ€™dan Ã¶nceki bir Ã§ok dil prosedÃ¼reldi yani sÄ±nÄ±f yapÄ±larÄ± yoktu kodlar metodlar yada rutinler iÃ§erisinde yazÄ±lÄ±yordu.GÃ¼nÃ¼mÃ¼zde nesne yÃ¶nelimli yaklaÅŸÄ±mÄ±n dÄ±ÅŸÄ±nda yaygÄ±n olarak kullanÄ±lan bir diÄŸer yaklaÅŸÄ±mda fonksiyonel yaklaÅŸÄ±mdÄ±r.Java 8 sÃ¼rÃ¼mÃ¼ ile birlikte Java dili fonksiyonel Ã¶zellik de kazanmÄ±ÅŸtÄ±r.</p>

<h3 id="encapsulation---kapsÃ¼lleme">Encapsulation - KapsÃ¼lleme</h3>
<p>Java dili verilerin istenmeyen eriÅŸimlerden korumak iÃ§in <strong>access modifiers(eriÅŸim belirleyicileri)</strong> yapÄ±sÄ±na sahiptir.</p>

<h3 id="platform-baÄŸÄ±msÄ±z">Platform BaÄŸÄ±msÄ±z</h3>
<p>Java <strong><em>Write Once Run Everywhere</em></strong> mottosu ile Ã§Ä±kmÄ±ÅŸtÄ±r.Ã–n derleme iÅŸleminden geÃ§ip bytecode halini alan java kodlarÄ± her makinede Ã§alÄ±ÅŸÄ±rlar.</p>

<h3 id="gÃ¼Ã§lÃ¼">GÃ¼Ã§lÃ¼</h3>
<p>C++ dilinde hafÄ±za yÃ¶netimi programcÄ±ya aitti bu da program yapma iÅŸini oldukÃ§a zorlaÅŸtÄ±ran bir durumdu Ã§Ã¼nkÃ¼ <strong>gabage collecting (Ã§Ã¶p toplama)</strong> programcÄ± tarafÄ±ndan yapÄ±lÄ±yordu programcÄ± iÅŸe yaramayan nesneleri yok etmek durumundaydÄ±.KÃ¶tÃ¼ bir hafÄ±za yÃ¶netimi bir Ã§ok hata Ã§Ä±kmasÄ±na sebebiyet veriyordu java ile birlikte tÃ¼m bu iÅŸlemler javanÄ±n kontrolune geÃ§ip otomatikleÅŸti.</p>

<h3 id="basit">Basit</h3>
<p>Java C++ â€˜ dan basit bir yapÄ±da tasarlanmÄ±ÅŸtÄ±r.Pointer yapÄ±sÄ± C++ dilini oldukÃ§a zor anlaÅŸÄ±lÄ±r bir yapÄ± haline getirmekteydi Java â€˜ da pointer yapÄ±sÄ± yoktur.OperatÃ¶rlerin aÅŸÄ±rÄ± yÃ¼klenmesi durumu Javaâ€™ da yoktur.</p>

<h3 id="gÃ¼venli">GÃ¼venli</h3>
<p>Java kodlarÄ± JVM iÃ§erisinde oluÅŸturulan sanal bir alanda(<strong>sandbox</strong>) Ã§alÄ±ÅŸÄ±r bu durum da kodlarÄ±n, Ã§alÄ±ÅŸacaÄŸÄ± gerÃ§ek makineye doÄŸrudan bir zarar vermesine olanak vermez.</p>

<h3 id="multithread">Multithread</h3>
<p>Java dili bir Ã§ok kod parÃ§acÄ±ÄŸÄ±nÄ±n aynÄ± anda eÅŸ zamanlÄ± Ã§alÄ±ÅŸmasÄ±na olanak saÄŸlayacak ÅŸekilde tasarlanmÄ±ÅŸtÄ±r.</p>

<h3 id="backward-compatibility---geriye-dÃ¶nÃ¼k-uyumluluk">Backward Compatibility - Geriye DÃ¶nÃ¼k Uyumluluk</h3>
<p>Java dili eski Java sÃ¼rÃ¼mlerinde yazÄ±lan kodlarÄ±n sonraki sÃ¼rÃ¼mlerde Ã§alÄ±ÅŸmasÄ±na olanak saÄŸlayacak ÅŸekilde geliÅŸtirilir.</p>

<blockquote>
  <p>Bu yazÄ± dizisinde linkini paylaÅŸtÄ±ÄŸÄ±m <strong><em>OCP Oracle Certified Professional Java SE 11 Programmer I Study Guide: Exam 1Z0-815</em></strong> kitabÄ±ndan tuttuÄŸum notlarÄ±n derlenmiÅŸ halini yazmaya Ã§alÄ±ÅŸacaÄŸÄ±m.
https://www.amazon.com/gp/product/1119584701/ref=ox_sc_act_title_1?smid=A2SQ87CI0X1ZUS&amp;psc=1</p>
</blockquote>

:ET